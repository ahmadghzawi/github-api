{"ast":null,"code":"var _jsxFileName = \"/home/owner/Desktop/GHZAWI/github/react/github-api/src/components/Items.jsx\";\nimport React, { Component } from 'react';\n\nclass Items extends Component {\n  render(props) {\n    let numOfFollowers = [];\n    let numOfRepos = [];\n    if (this.props.battle) return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, \"BATTLE!\");\n    if (!this.props.items) return null;\n\n    if (this.props.kind === \"usersFollowers\") {\n      this.props.items.map(item => {\n        fetch(\"https://api.github.com/users/\".concat(item.login)).then(response => response.json()).then(data => {\n          numOfFollowers.push(data.followers);\n          numOfRepos.push(data.public_repos);\n        });\n      });\n      console.log(numOfFollowers);\n      return this.props.items.map((item, index) => React.createElement(\"div\", {\n        className: \"col-md-3 mb-3 d-flex justify-content-center\",\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        style: {\n          width: \"20rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: item.avatar_url,\n        className: \"card-img-top\",\n        alt: item.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, item.login), React.createElement(\"p\", {\n        className: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Followers: \", numOfFollowers), React.createElement(\"p\", {\n        className: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Repositories: \", toString(numOfRepos[index])), React.createElement(\"a\", {\n        href: item.html_url,\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Account\")))));\n    }\n\n    if (this.props.kind === \"usersRepos\") {\n      return this.props.items.map(item => React.createElement(\"div\", {\n        className: \"col-md-4 mb-3\",\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        style: {\n          width: \"18rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"...\",\n        className: \"card-img-top\",\n        alt: \"...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Card title\"), React.createElement(\"p\", {\n        className: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\"), React.createElement(\"a\", {\n        href: \"#\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Go somewhere\")))));\n    }\n\n    return this.props.items.map(item => React.createElement(\"div\", {\n      className: \"col-md-4 mb-3\",\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      style: {\n        width: \"18rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"...\",\n      className: \"card-img-top\",\n      alt: \"...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Card title\"), React.createElement(\"p\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\"), React.createElement(\"a\", {\n      href: \"#\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Go somewhere\")))));\n  }\n\n}\n\nexport default Items;","map":{"version":3,"sources":["/home/owner/Desktop/GHZAWI/github/react/github-api/src/components/Items.jsx"],"names":["React","Component","Items","render","props","numOfFollowers","numOfRepos","battle","items","kind","map","item","fetch","login","then","response","json","data","push","followers","public_repos","console","log","index","id","width","avatar_url","toString","html_url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAC1BE,EAAAA,MAAM,CAACC,KAAD,EAAQ;AACV,QAAIC,cAAc,GAAG,EAArB;AACA,QAAIC,UAAU,GAAG,EAAjB;AAEA,QAAI,KAAKF,KAAL,CAAWG,MAAf,EAAuB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AAEvB,QAAI,CAAC,KAAKH,KAAL,CAAWI,KAAhB,EAAuB,OAAO,IAAP;;AAEvB,QAAI,KAAKJ,KAAL,CAAWK,IAAX,KAAoB,gBAAxB,EAA0C;AACtC,WAAKL,KAAL,CAAWI,KAAX,CAAiBE,GAAjB,CAAsBC,IAAI,IAAI;AAC1BC,QAAAA,KAAK,wCAAiCD,IAAI,CAACE,KAAtC,EAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACVZ,UAAAA,cAAc,CAACa,IAAf,CAAoBD,IAAI,CAACE,SAAzB;AACAb,UAAAA,UAAU,CAACY,IAAX,CAAgBD,IAAI,CAACG,YAArB;AACH,SALL;AAMH,OAPD;AAQAC,MAAAA,OAAO,CAACC,GAAR,CAAYjB,cAAZ;AACA,aACI,KAAKD,KAAL,CAAWI,KAAX,CAAiBE,GAAjB,CAAsB,CAACC,IAAD,EAAOY,KAAP,KAClB;AACI,QAAA,SAAS,EAAC,6CADd;AAEI,QAAA,GAAG,EAAEZ,IAAI,CAACa,EAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAEd,IAAI,CAACe,UAAf;AAA2B,QAAA,SAAS,EAAC,cAArC;AAAoD,QAAA,GAAG,EAAEf,IAAI,CAACE,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4BF,IAAI,CAACE,KAAjC,CADJ,EAEI;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAqCR,cAArC,CAFJ,EAGI;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAwCsB,QAAQ,CAACrB,UAAU,CAACiB,KAAD,CAAX,CAAhD,CAHJ,EAII;AAAG,QAAA,IAAI,EAAEZ,IAAI,CAACiB,QAAd;AAAwB,QAAA,SAAS,EAAC,iBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,CAFJ,CAJJ,CADJ,CADJ;AAmBH;;AAED,QAAI,KAAKxB,KAAL,CAAWK,IAAX,KAAoB,YAAxB,EAAsC;AAClC,aACI,KAAKL,KAAL,CAAWI,KAAX,CAAiBE,GAAjB,CAAsBC,IAAI,IACtB;AACI,QAAA,SAAS,EAAC,eADd;AAEI,QAAA,GAAG,EAAEA,IAAI,CAACa,EAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAC,KAAT;AAAe,QAAA,SAAS,EAAC,cAAzB;AAAwC,QAAA,GAAG,EAAC,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0GAFJ,EAGI;AAAG,QAAA,IAAI,EAAC,GAAR;AAAY,QAAA,SAAS,EAAC,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ,CAFJ,CAJJ,CADJ,CADJ;AAiBH;;AAED,WACI,KAAKrB,KAAL,CAAWI,KAAX,CAAiBE,GAAjB,CAAsBC,IAAI,IACtB;AACI,MAAA,SAAS,EAAC,eADd;AAEI,MAAA,GAAG,EAAEA,IAAI,CAACa,EAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAC,KAAT;AAAe,MAAA,SAAS,EAAC,cAAzB;AAAwC,MAAA,GAAG,EAAC,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wGAFJ,EAGI;AAAG,MAAA,IAAI,EAAC,GAAR;AAAY,MAAA,SAAS,EAAC,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,CAFJ,CAJJ,CADJ,CADJ;AAiBH;;AA7EyB;;AAgF9B,eAAevB,KAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Items extends Component {\n    render(props) { \n        let numOfFollowers = [];\n        let numOfRepos = [];\n        \n        if (this.props.battle) return <div>BATTLE!</div>\n\n        if (!this.props.items) return null\n\n        if (this.props.kind === \"usersFollowers\") {\n            this.props.items.map( item => {\n                fetch(`https://api.github.com/users/${item.login}`)\n                    .then(response => response.json())\n                    .then(data => {\n                        numOfFollowers.push(data.followers)\n                        numOfRepos.push(data.public_repos)\n                    })\n            })\n            console.log(numOfFollowers);\n            return (\n                this.props.items.map( (item, index) => \n                    <div \n                        className=\"col-md-3 mb-3 d-flex justify-content-center\"\n                        key={item.id}    \n                    >\n                        <div className=\"card\" style={{width: \"20rem\"}}>\n                            <img src={item.avatar_url} className=\"card-img-top\" alt={item.login} />\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">{item.login}</h5>\n                                <p className=\"card-text\">Followers: {numOfFollowers}</p>\n                                <p className=\"card-text\">Repositories: {toString(numOfRepos[index])}</p>\n                                <a href={item.html_url} className=\"btn btn-primary\">Account</a>\n                            </div>\n                        </div>\n                    </div>\n                )\n            )\n\n        }\n\n        if (this.props.kind === \"usersRepos\") {\n            return ( \n                this.props.items.map( item => \n                    <div \n                        className=\"col-md-4 mb-3\"\n                        key={item.id}    \n                    >\n                        <div className=\"card\" style={{width: \"18rem\"}}>\n                            <img src=\"...\" className=\"card-img-top\" alt=\"...\" />\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">Card title</h5>\n                                <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n                                <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\n                            </div>\n                        </div>\n                    </div>\n                )\n            )\n        }\n\n        return ( \n            this.props.items.map( item => \n                <div \n                    className=\"col-md-4 mb-3\"\n                    key={item.id}    \n                >\n                    <div className=\"card\" style={{width: \"18rem\"}}>\n                        <img src=\"...\" className=\"card-img-top\" alt=\"...\" />\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">Card title</h5>\n                            <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n                            <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\n                        </div>\n                    </div>\n                </div>\n            )\n        )\n    }\n}\n \nexport default Items;"]},"metadata":{},"sourceType":"module"}